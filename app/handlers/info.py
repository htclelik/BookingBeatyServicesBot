# app/handlers/info.py
# –ö–æ–º–∞–Ω–¥—ã /info , –∫–Ω–æ–ø–∫–∞ "–û –Ω–∞—Å"
from aiogram import Router, types, Bot
from aiogram.types import FSInputFile, URLInputFile

from app.database.local_mini_db import MASTER_SERVICES_FULL, INFO_LIST_MASTER
from app.keyboards.inline import create_inline_universal_keyboard  # get_masters_keyboard, get_services_keyboard,
from app.keyboards.reply import create_custom_keyboard
from app.utils.constants import CUSTOM_BUTTONS, BACK_BUTTON, LAYOUT_CUSTOM_212_BUTTON
from app.utils.formmaters import format_price, format_duration, format_duration_minutes
from app.utils.logger import setup_logger

logger = setup_logger(__name__)

router = Router()

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info
async def info_handler(message: types.Message):
    user_name = message.from_user.first_name
    masters = {master["name_master"]: f"master_{master_id}" for master_id, master in INFO_LIST_MASTER.items()}
    # buttons = {**masters,**BACK_BUTTON}

    await message.answer(
        f"<b>{user_name}</b>, \n–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞ –Ω–∏–∂–µ:\n"
        f"–ù–∞—à–∏ –º–∞—Å—Ç–µ—Ä–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –≤ —Å–≤–æ–∏—Ö –æ–±–ª–∞—Å—Ç—è—Ö:\n\n\n"
        f"<b>–ú–∞–Ω–∏–∫—é—Ä –∏ –ø–µ–¥–∏–∫—é—Ä</b>: –º–∞—Å—Ç–µ—Ä <b>–ù–∞—Ç–∞—à–∞</b>\n\n"
        f"<b>–ú—É–∂—Å–∫–∏–µ —Å—Ç—Ä–∏–∂–∫–∏</b>(–ø—Ä–∏—á–µ—Å–∫–∞ –∏ –±–æ—Ä–æ–¥–∞): –º–∞—Å—Ç–µ—Ä <b>–í–∏–∫—Ç–æ—Ä</b>\n\n",
        parse_mode="HTML",
        reply_markup=create_inline_universal_keyboard(masters, 1)
    )



# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –º–∞—Å—Ç–µ—Ä–∞
async def master_info_handler(callback_query: types.CallbackQuery, bot: Bot):
    master_id = int(callback_query.data.split('_')[1])
    master = INFO_LIST_MASTER.get(master_id)
    services = MASTER_SERVICES_FULL.get(master_id, {})

    if master:
        services_text = ""
        for service_category, service_details in services.items():
            price = service_details["price"]
            duration = service_details["duration"]
            formatted_price = format_price(price)
            formatted_duration = format_duration(duration)
            formatted_duration_minutes = format_duration_minutes(duration)
            services_text += (
                f"\nüîπ <b>{service_details["full_name_service"].capitalize()}</b>:\n"
                f" -üíµ–¶–µ–Ω–∞ —É—Å–ª—É–≥–∏:- {formatted_price}\n"
                f" - {formatted_duration} {formatted_duration_minutes}\n"
            )

        # –ê–¥—Ä–µ—Å
        address_raw = master.get('address', '–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω')
        address_html = f"<b>{address_raw}</b>"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ—Å—Ç–æ –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
        if '\n' in address_raw:
            parts = address_raw.split('\n', 1)
            text_part = parts[0].strip()
            url_part = parts[1].strip()
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å –ø–æ—Ö–æ–∂–∞ –Ω–∞ URL
            if url_part.startswith('http'):
                address_html = f"<b>{text_part}</b> <a href='{url_part}'>üó∫Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ üè†</a>"
            # –ï—Å–ª–∏ –≤—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å –Ω–µ URL, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –±—ã–ª–æ (–≤–µ—Å—å —Ç–µ–∫—Å—Ç –∂–∏—Ä–Ω—ã–º)

        # –õ–∏—á–Ω—ã–π Telegram
        telegram_url = master.get('my_telegram')
        telegram_html = f"üí¨ <a href='{telegram_url}'>–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram</a>" if telegram_url else "–ö–æ–Ω—Ç–∞–∫—Ç Telegram –Ω–µ —É–∫–∞–∑–∞–Ω"

        # Email
        email_address = master.get('email')
        email_html = f"üì© <a href='mailto:{email_address}'>{email_address}</a>" if email_address else "Email –Ω–µ —É–∫–∞–∑–∞–Ω"

        # –ö–∞–Ω–∞–ª/–ì—Ä—É–ø–ø–∞ Telegram
        channel_url = master.get('cl_telegram')
        channel_html = f"üì¢ <a href='{channel_url}'>–ö–∞–Ω–∞–ª/–ì—Ä—É–ø–ø–∞ –≤ Telegram</a>" if channel_url else "–ö–∞–Ω–∞–ª Telegram –Ω–µ —É–∫–∞–∑–∞–Ω"

        # –ì—Ä—É–ø–ø–∞ VK
        vk_url = master.get('vk_club')
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –∏ –ø—Ä–æ–±–µ–ª—ã –∏–∑ URL VK, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        vk_url_cleaned = vk_url.strip().replace('\n', '').replace(' ', '') if vk_url else None
        vk_html = f"üåç <a href='{vk_url_cleaned}'>–ì—Ä—É–ø–ø–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ</a>" if vk_url_cleaned else "–ì—Ä—É–ø–ø–∞ VK –Ω–µ —É–∫–∞–∑–∞–Ω–∞"


        about_me_text = (
            f"{master['what your services mean']}.\n\n"
            f"ü™© –ú–æ—è –æ–±–ª–∞—Å—Ç—å —Ä–∞–±–æ—Ç—ã: {master['work_area']}\n"
            f"üìç –ú–æ–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: {master['experience']}\n"
            f"üìç –ú–æ–π –ª—é–±–∏–º—ã–π –≥–æ—Ä–æ–¥: <b>{master['city']}</b>\n\n"
            f"üìÖ –ú–æ–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã: —Å <b>{master['work_start_hour']}</b> –¥–æ <b>{master['work_end_hour']}</b>\n"
            f"   –í—ã—Ö–æ–¥–Ω—ã–µ: <b>{master.get('weekend', '–ü–æ –∑–∞–ø—Ä–æ—Å—É')}</b>\n\n"  # –î–æ–±–∞–≤–∏–º .get –¥–ª—è –≤—ã—Ö–æ–¥–Ω—ã—Ö
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å
            f"üè° –í—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –º–µ–Ω—è –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ –≤ —É—é—Ç–Ω–æ–º –º–µ—Å—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É:\n{address_html}\n\n\n"
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
            f"üì≤ –Ø –Ω–∞ —Å–≤—è–∑–∏ —Å –≤–∞–º–∏:\n{telegram_html}\n\n"
            f"üìç–ú–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –Ω–∞ –ø–æ—á—Ç—É:\n{email_html}\n\n"
            f"\n{channel_html}\n\n" #üì¢ –ö–∞–Ω–∞–ª –≤ Telegram:
            f"üå† –í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å <b>–º–æ–∏–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏</b>:\n{vk_html}\n\n"
        )

        services_list_text = (
            f"–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é –≤–∞–º <b>üìç—Å–ª–µ–¥—É—é—â–∏–µ —É—Å–ª—É–≥–∏:üëá</b>\n{services_text}"
        )

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º FSInputFile –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        # photo = FSInputFile(master["photo_url"])
        # photo_url = f"https://drive.google.com/uc?export=view&id={file_id}"
        photo = URLInputFile(master["photo_url"])

        try:
            short_caption = f"{master['welcome_short_text']} <b>{master['name_master']}</b>\n{master['brief_about_me']}"
            await bot.send_photo(chat_id=callback_query.message.chat.id, photo=photo, caption=short_caption,
                                 parse_mode="HTML")
            await bot.send_message(chat_id=callback_query.message.chat.id, text=about_me_text, parse_mode="HTML", disable_web_page_preview=True)
            await bot.send_message(chat_id=callback_query.message.chat.id, text=services_list_text, parse_mode="HTML",
                                   reply_markup=create_custom_keyboard(CUSTOM_BUTTONS, LAYOUT_CUSTOM_212_BUTTON), disable_web_page_preview=True)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—Å—Ç–µ—Ä–µ: {e}")
            await callback_query.answer("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—Å—Ç–µ—Ä–µ!", show_alert=True)

        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        await callback_query.message.delete()
    else:
        await callback_query.answer("–ú–∞—Å—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)


